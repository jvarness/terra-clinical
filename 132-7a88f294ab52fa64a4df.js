(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{1254:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,a=(n=l(0))&&n.__esModule?n:{default:n},r=l(875);t.default=function(){return a.default.createElement(r.ResultNameHeaderCell,{resultName:"Blood Pressure",unit:"mmHg"})}},1255:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=m(l(0)),a=l(875),r=m(l(3)),o=m(l(892));function m(e){return e&&e.__esModule?e:{default:e}}var c=r.default.bind(o.default),s=function(){return n.default.createElement("div",{className:c("mock-flowsheet-firstcolumn")},n.default.createElement("div",{className:c("mock-flowsheet-firstcolumn-cell")},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Temp",unit:"degC"})),n.default.createElement("div",{className:c(["mock-flowsheet-firstcolumn-cell","zebra"])},n.default.createElement(a.ResultNameHeaderCell,{resultName:"HR",unit:"bpm"})),n.default.createElement("div",{className:c("mock-flowsheet-firstcolumn-cell")},n.default.createElement(a.ResultNameHeaderCell,{resultName:"BP",unit:"mmHg"})),n.default.createElement("div",{className:c(["mock-flowsheet-firstcolumn-cell","zebra"])},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Mean Arterial Pressure, Cuff",unit:"mmHg",typeIndicator:"calculated"})),n.default.createElement("div",{className:c("mock-flowsheet-firstcolumn-cell")},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Respiratory Rate",unit:"br/min"})),n.default.createElement("div",{className:c(["mock-flowsheet-firstcolumn-cell","zebra"])},n.default.createElement(a.ResultNameHeaderCell,{resultName:"SpO2",unit:"%"})),n.default.createElement("div",{className:c("mock-flowsheet-firstcolumn-cell")},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Height/Length Dosing",unit:"cm"})),n.default.createElement("div",{className:c(["mock-flowsheet-firstcolumn-cell","zebra"])},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Height/Length Measured",unit:"cm"})),n.default.createElement("div",{className:c("mock-flowsheet-firstcolumn-cell")},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Weight Dosing",unit:"kg"})),n.default.createElement("div",{className:c(["mock-flowsheet-firstcolumn-cell","zebra"])},n.default.createElement(a.ResultNameHeaderCell,{resultName:"Weight Measured",unit:"kg"})))};t.default=s},1375:function(e,t,l){"use strict";l.r(t),l.d(t,"default",(function(){return M}));var n=l(0),a=l.n(n),r=l(284),o=l(921),m=l(1254),c=l.n(m);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var i={};function d(e){var t=e.components,l=u(e,["components"]);return Object(r.mdx)("wrapper",s({},i,l,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("pre",null,Object(r.mdx)("code",s({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\n\nexport default () => <ResultNameHeaderCell resultName=\"Blood Pressure\" unit=\"mmHg\" />;\n\n")))}d.isMDXComponent=!0;var p=l(873),f=l.n(p),x=function(e){var t=e.title,l=e.description,n=e.isExpanded;return a.a.createElement(f.a,{title:t||"Result Name Header Cell",description:l,example:a.a.createElement(c.a,null),exampleSrc:a.a.createElement(d,null),isExpanded:n})},b=l(1255),_=l.n(b);function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e}).apply(this,arguments)}function N(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var O={};function j(e){var t=e.components,l=N(e,["components"]);return Object(r.mdx)("wrapper",h({},O,l,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("pre",null,Object(r.mdx)("code",h({parentName:"pre"},{className:"language-jsx"}),'import React from \'react\';\nimport { ResultNameHeaderCell } from \'terra-clinical-result/lib\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../Examples.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst ResultNameColumnFlowsheetExample = () => (\n  <div className={cx(\'mock-flowsheet-firstcolumn\')}>\n    <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n      <ResultNameHeaderCell resultName="Temp" unit="degC" />\n    </div>\n    <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n      <ResultNameHeaderCell resultName="HR" unit="bpm" />\n    </div>\n    <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n      <ResultNameHeaderCell resultName="BP" unit="mmHg" />\n    </div>\n    <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n      <ResultNameHeaderCell resultName="Mean Arterial Pressure, Cuff" unit="mmHg" typeIndicator="calculated" />\n    </div>\n    <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n      <ResultNameHeaderCell resultName="Respiratory Rate" unit="br/min" />\n    </div>\n    <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n      <ResultNameHeaderCell resultName="SpO2" unit="%" />\n    </div>\n    <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n      <ResultNameHeaderCell resultName="Height/Length Dosing" unit="cm" />\n    </div>\n    <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n      <ResultNameHeaderCell resultName="Height/Length Measured" unit="cm" />\n    </div>\n    <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n      <ResultNameHeaderCell resultName="Weight Dosing" unit="kg" />\n    </div>\n    <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n      <ResultNameHeaderCell resultName="Weight Measured" unit="kg" />\n    </div>\n  </div>\n);\n\nexport default ResultNameColumnFlowsheetExample;\n\n')))}j.isMDXComponent=!0;var v=function(e){var t=e.title,l=e.description,n=e.isExpanded;return a.a.createElement(f.a,{title:t||"Result Name Header Flowsheet Example",description:l,example:a.a.createElement(_.a,null),exampleSrc:a.a.createElement(j,null),isExpanded:n})},g=l(891),y=l.n(g);function w(){return(w=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e}).apply(this,arguments)}function E(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var C=function(){return Object(r.mdx)(y.a,{rows:[{name:"resultName",type:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"string"))}return t.isMDXComponent=!0,t({})},required:!0,defaultValue:"none",description:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"Content to be displayed for the Result Name row label."))}return t.isMDXComponent=!0,t({})}},{name:"unit",type:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"string"))}return t.isMDXComponent=!0,t({})},required:!1,defaultValue:"none",description:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"Content to be displayed as the supporting Unit of Measure row label."))}return t.isMDXComponent=!0,t({})}},{name:"paddingStyle",type:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"enum"),Object(r.mdx)("pre",null,Object(r.mdx)("code",w({parentName:"pre"},{className:"language-json"}),'[\n "none",\n "compact",\n "standard"\n]\n')))}return t.isMDXComponent=!0,t({})},required:!1,defaultValue:"'compact'",description:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"The padding styling to apply to the Result Name row header cell.\nOne of ",Object(r.mdx)("inlineCode",{parentName:"p"},"'none'"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"'compact'"),", or ",Object(r.mdx)("inlineCode",{parentName:"p"},"'standard'"),"."))}return t.isMDXComponent=!0,t({})}},{name:"typeIndicator",type:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"enum"),Object(r.mdx)("pre",null,Object(r.mdx)("code",w({parentName:"pre"},{className:"language-json"}),'[\n "none",\n "calculated"\n]\n')))}return t.isMDXComponent=!0,t({})},required:!1,defaultValue:"'none'",description:function(){var e={};function t(t){var l=t.components,n=E(t,["components"]);return Object(r.mdx)("wrapper",w({},e,n,{components:l,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"Adds additional icon at beginning of row before the ResultName, indicating special information about results or cells.\nOne of ",Object(r.mdx)("inlineCode",{parentName:"p"},"'none'")," or ",Object(r.mdx)("inlineCode",{parentName:"p"},"'calculated'"),"."))}return t.isMDXComponent=!0,t({})}}]})};function R(){return(R=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e}).apply(this,arguments)}function k(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var H={};function M(e){var t=e.components,l=k(e,["components"]);return Object(r.mdx)("wrapper",R({},H,l,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)(o.a,{mdxType:"Badge"}),Object(r.mdx)("h1",{id:"result-name-header-cell"},"Result Name Header Cell"),Object(r.mdx)("p",null,"Result-Name-Header-Cell is a component of terra-clinical-result that creates a standardized view for the Result Name and Unit of Measure in the first column (row header) for each row within a flowsheet."),Object(r.mdx)("h2",{id:"getting-started"},"Getting Started"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Install with ",Object(r.mdx)("a",R({parentName:"li"},{href:"https://www.npmjs.com/"}),"npmjs"),":",Object(r.mdx)("ul",{parentName:"li"},Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"npm install terra-clinical-result"))))),Object(r.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),Object(r.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",R({parentName:"tr"},{align:null}),"Peer Dependency"),Object(r.mdx)("th",R({parentName:"tr"},{align:null}),"Version"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",R({parentName:"tr"},{align:null}),"react"),Object(r.mdx)("td",R({parentName:"tr"},{align:null}),"^16.8.5")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",R({parentName:"tr"},{align:null}),"react-dom"),Object(r.mdx)("td",R({parentName:"tr"},{align:null}),"^16.8.5")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",R({parentName:"tr"},{align:null}),"react-intl"),Object(r.mdx)("td",R({parentName:"tr"},{align:null}),"^2.8.0")))),Object(r.mdx)("h2",{id:"usage"},"Usage"),Object(r.mdx)("pre",null,Object(r.mdx)("code",R({parentName:"pre"},{className:"language-jsx"}),"import { ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\n")),Object(r.mdx)("h2",{id:"examples"},"Examples"),Object(r.mdx)(x,{mdxType:"Default"}),Object(r.mdx)(v,{title:"Result Name Header Cells in Sample Flowsheet",mdxType:"FlowsheetExample"}),Object(r.mdx)("h2",{id:"result-name-header-cell-props"},"Result Name Header Cell Props"),Object(r.mdx)(C,{mdxType:"ResultNameHeaderProps"}))}M.isMDXComponent=!0},892:function(e,t,l){e.exports={"example-description-text":"Examples-module__example-description-text___105a1","dashed-border-group":"Examples-module__dashed-border-group___FaK0f","clinical-result-fontsize-16":"Examples-module__clinical-result-fontsize-16___2l1lf","clinical-result-fontsize-18":"Examples-module__clinical-result-fontsize-18___1dITB","clinical-result-fontsize-21":"Examples-module__clinical-result-fontsize-21___1l4T-","clinical-result-fontsize-24":"Examples-module__clinical-result-fontsize-24___11VD7","bottom-space":"Examples-module__bottom-space___2RJUj","mock-flowsheet-header":"Examples-module__mock-flowsheet-header___2J8GR","mock-flowsheet-header-cell":"Examples-module__mock-flowsheet-header-cell___2X1-C","new-date":"Examples-module__new-date___ZYIBR","mock-flowsheet-firstcolumn":"Examples-module__mock-flowsheet-firstcolumn___sDlpA","mock-flowsheet-firstcolumn-cell":"Examples-module__mock-flowsheet-firstcolumn-cell___3tIg0",zebra:"Examples-module__zebra___17kZQ","mock-flowsheet-resultcolumn":"Examples-module__mock-flowsheet-resultcolumn___2Gg7z","half-column":"Examples-module__half-column___JyyiR","double-column":"Examples-module__double-column___24VVd","triple-column":"Examples-module__triple-column___2HhTc","flexible50-column":"Examples-module__flexible50-column___3H3Sg","mock-flowsheet-resultcolumn-cell":"Examples-module__mock-flowsheet-resultcolumn-cell___1TA3s","allow-wrapping":"Examples-module__allow-wrapping___3h4c-",empty:"Examples-module__empty___3vfPs",short:"Examples-module__short___1ZbnE",medium:"Examples-module__medium___2bTqZ",tall:"Examples-module__tall___3zOkJ","with-padding":"Examples-module__with-padding___3uvAP","vertical-center-align-wrapper":"Examples-module__vertical-center-align-wrapper___1sP_l"}},921:function(e,t,l){"use strict";l.d(t,"a",(function(){return m}));var n=l(0),a=l.n(n),r=l(877),o=l.n(r),m=function(e){var t=e.url;return a.a.createElement(o.a,{src:"https://github.com/cerner/terra-clinical/tree/main/packages/terra-clinical-result",name:"terra-clinical-result",version:"1.8.0",url:t})}}}]);
//# sourceMappingURL=132-7a88f294ab52fa64a4df.js.map