{"version":3,"sources":["webpack:///./packages/terra-clinical-onset-picker/lib/terra-dev-site/doc/clinical-onset-picker/UpgradeGuide.2.doc.mdx","webpack:///./node_modules/terra-dev-site/lib/loader-components/_Badges.js","webpack:///./node_modules/terra-dev-site/lib/loader-components/Badges.module.scss?f3f4","webpack:///./packages/terra-clinical-onset-picker/package.json"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_propTypes","_bind","_BadgesModule","obj","__esModule","cx","bind","propTypes","name","string","isRequired","src","url","version","Badges","npmBadge","createElement","className","href","concat","srcCodeBadge","undefined","_default","module","Badge"],"mappings":"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","file":"167-85fe92ea4384b16f35a6.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Badge } from 'terra-clinical-onset-picker/package.json?dev-site-package';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Badge mdxType=\"Badge\" />\n    <h1 {...{\n      \"id\": \"terra-clinical-onset-picker-upgrade-guide\"\n    }}>{`Terra Clinical Onset Picker Upgrade Guide`}</h1>\n    <h2 {...{\n      \"id\": \"changes-from-30-to-40\"\n    }}>{`Changes from 3.0 to 4.0`}</h2>\n    <h3 {...{\n      \"id\": \"breaking-changes\"\n    }}>{`Breaking Changes`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed prop `}<inlineCode parentName=\"li\">{`granularitySelectOnChange`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed prop `}<inlineCode parentName=\"li\">{`precisionSelectOnChange`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed prop `}<inlineCode parentName=\"li\">{`onsetDateInputOnChange`}</inlineCode></li>\n      <li parentName=\"ul\">{`Condensed onChange function props into a single prop (`}<inlineCode parentName=\"li\">{`onsetOnChange`}</inlineCode>{`) that returns an Object for the onsetDate.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"changes-for-onsetonchange\"\n    }}>{`Changes for onsetOnChange`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`-  this.handleGranularity = this.handleGranularity.bind(this);\n-  this.handlePrecision = this.handlePrecision.bind(this);\n-  handleGranularity(granularity) {\n-    this.setState({ granularity });\n-  }\n\n- handlePrecision(precision) {\n-    this.setState({ precision });\n-  }\n\n-  handleOnset(onsetDate) {\n-    this.setState({ onsetDate });\n+  handleOnset(onsetObject) {\n+    this.setState({\n+      precision: onsetObject.precision,\n+      granularity: onsetObject.granularity,\n+      onsetDate: onsetObject.onsetDate,\n+      ageUnit: onsetObject.ageUnit,\n+    });\n        <OnsetPicker\n          birthdate={moment().subtract(6, 'years').format()}\n          granularity={this.state.granularity}\n-         granularitySelectOnChange={this.handleGranularity}\n          id=\"doogs-supplied\"\n          precision={this.state.precision}\n-         precisionSelectOnChange={this.handlePrecision}\n          onsetDate={this.state.onsetDate}\n-         onsetDateInputOnChange={this.handleOnset}\n+         onsetOnChange={this.handleOnset}\n        />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"new-feature\"\n    }}>{`New Feature`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Added support for age units. Use new `}<inlineCode parentName=\"li\">{`ageUnit`}</inlineCode>{` prop to pass default age unit values, accepted values are `}<inlineCode parentName=\"li\">{`weeks`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`months`}</inlineCode>{`, or `}<inlineCode parentName=\"li\">{`years`}</inlineCode>{` `}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"new-props\"\n    }}>{`New Props`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`New prop `}<inlineCode parentName=\"li\">{`ageUnit`}</inlineCode></li>\n      <li parentName=\"ul\">{`New prop `}<inlineCode parentName=\"li\">{`onsetOnChange`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"changes-from-20-to-30\"\n    }}>{`Changes from 2.0 to 3.0`}</h2>\n    <h3 {...{\n      \"id\": \"breaking-changes-1\"\n    }}>{`Breaking Changes`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`New required prop `}<inlineCode parentName=\"li\">{`id`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed exported enums `}<inlineCode parentName=\"li\">{`OnsetPicker.Opts.Granularities`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`OnsetPicker.Opts.Precisions`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed default prop values for `}<inlineCode parentName=\"li\">{`granularity`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`precision`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`onChange`}</inlineCode>{` functions can now return blank values`}</li>\n      <li parentName=\"ul\">{`Visual updates from switching to `}<inlineCode parentName=\"li\">{`terra-form-field`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`terra-form-fieldset`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`terra-form-input`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`terra-form-select`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"new-features\"\n    }}>{`New Features`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`CSS themeable variables`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"removed-props\"\n    }}>{`Removed props`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed prop `}<inlineCode parentName=\"li\">{`granularitySelectName`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed prop `}<inlineCode parentName=\"li\">{`precisionSelectName`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed prop `}<inlineCode parentName=\"li\">{`precisionSelectName`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"css-variables\"\n    }}>{`CSS Variables`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-field-margin-right`}</li>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-field-margin-bottom`}</li>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-precision-select-min-width`}</li>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-granularity-select-min-width`}</li>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-month-select-min-width`}</li>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-age-granularity-select-min-width`}</li>\n      <li parentName=\"ul\">{`--terra-clinical-onset-picker-age-input-width`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _BadgesModule = _interopRequireDefault(require(\"./Badges.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_BadgesModule.default);\n\nvar propTypes = {\n  /**\n   * component name.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * Source code url\n   */\n  src: _propTypes.default.string,\n\n  /**\n   * url to link to\n   */\n  url: _propTypes.default.string,\n\n  /**\n   * The package version.\n   */\n  version: _propTypes.default.string.isRequired\n};\n\nvar Badges = function Badges(props) {\n  var src = props.src,\n      name = props.name,\n      url = props.url,\n      version = props.version;\n\n  var npmBadge = /*#__PURE__*/_react.default.createElement(\"a\", {\n    className: cx('badge'),\n    href: url || \"https://www.npmjs.org/package/\".concat(name, \"/v/\").concat(version)\n  }, /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-name')\n  }, url ? 'package' : 'npm'), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-version')\n  }, \"v\".concat(version)));\n\n  var srcCodeBadge = src ? /*#__PURE__*/_react.default.createElement(\"a\", {\n    className: cx('badge'),\n    href: src\n  }, /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-name')\n  }, \"github\"), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-version')\n  }, \"source\")) : undefined;\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: cx('badge-container')\n  }, npmBadge, srcCodeBadge);\n};\n\nBadges.propTypes = propTypes;\nvar _default = Badges;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"Badges-module__badge___3m7y2\",\"badge-container\":\"Badges-module__badge-container___1YxI5\",\"badge-name\":\"Badges-module__badge-name___BQ3u4\",\"badge-version\":\"Badges-module__badge-version___3OgwS\"};","import React from 'react';\nimport Badges from 'terra-dev-site/lib/loader-components/_Badges';\n\nexport const Badge = ({ url }) => (\n      <Badges\n        src=\"https://github.com/cerner/terra-clinical/tree/main/packages/terra-clinical-onset-picker\"\n        name=\"terra-clinical-onset-picker\"\n        version=\"4.22.0\"\n        url={url}\n      />\n    );"],"sourceRoot":""}