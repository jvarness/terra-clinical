{"version":3,"sources":["webpack:///./packages/terra-clinical-data-grid/src/DataGrid.jsx","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/clinicalDataGrid.1.doc.mdx","webpack:///./node_modules/terra-dev-site/lib/loader-components/_Badges.js","webpack:///./node_modules/terra-dev-site/lib/loader-components/Badges.module.scss?f3f4","webpack:///./node_modules/terra-dev-site/lib/loader-components/_PropsTable.js","webpack:///./node_modules/terra-dev-site/lib/loader-components/PropsTable.module.scss?2bab","webpack:///./packages/terra-clinical-data-grid/package.json"],"names":["rows","name","type","layoutProps","MDXContent","components","props","mdxType","isMDXComponent","required","defaultValue","description","parentName","Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_propTypes","_bind","_BadgesModule","obj","__esModule","cx","bind","propTypes","string","isRequired","src","url","version","Badges","npmBadge","createElement","className","href","concat","srcCodeBadge","undefined","_default","module","_typeof","Symbol","iterator","constructor","prototype","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_interopRequireWildcard","_theme","_PropsTableModule","WeakMap","arrayOf","shape","func","bool","PropsTable","_ref","theme","useContext","ThemeContext","map","row","Badge"],"mappings":"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","file":"129-a3d1079447b7e42c3aa5.js","sourcesContent":["import React from 'react';\nimport { mdx } from '@mdx-js/react';\nimport PropsTable from 'terra-dev-site/lib/loader-components/_PropsTable';\n\nexport default () => (\n <PropsTable\n   rows={[\n{ name: 'id', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`string`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: true, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`String that will be used to identify the DataGrid. This value will be used as the id attribute of the overall DataGrid container,\nand it will be used to prefix other id attributes used for internal componentry.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'pinnedColumns', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`arrayOf`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"name\": \"custom\",\n \"raw\": \"columnDataShape\"\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '[]', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Data for columns that will be pinned. Columns will be presented in the order given.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'overflowColumns', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`arrayOf`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"name\": \"custom\",\n \"raw\": \"columnDataShape\"\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '[]', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Data for columns that will be rendered in the DataGrid's horizontal overflow. Columns will be presented in the order given.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'sections', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`arrayOf`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"name\": \"custom\",\n \"raw\": \"sectionDataShape\"\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '[]', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Data for content in the body of the DataGrid. Sections will be rendered in the order given.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onCellSelect', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Function that is called when a selectable cell is selected. Parameters: `}<inlineCode parentName=\"p\">{`onCellSelect(sectionId, rowId, columnId)`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onColumnSelect', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Function that is called when a selectable header cell is selected. Parameters: `}<inlineCode parentName=\"p\">{`onColumnSelect(columnId)`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onRequestColumnResize', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Function that is called when a resizable column is resized. Parameters: `}<inlineCode parentName=\"p\">{`onRequestColumnResize(columnId, requestedWidth)`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onRequestSectionCollapse', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Function that is called when a collapsible section is selected. Parameters: `}<inlineCode parentName=\"p\">{`onRequestSectionCollapse(sectionId)`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'rowHeight', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`string`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '\\'2.5rem\\'', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`String that specifies the row height. Values are suggested to be in `}<inlineCode parentName=\"p\">{`rem`}</inlineCode>{`s (ex `}<inlineCode parentName=\"p\">{`'5rem'`}</inlineCode>{`), but any valid CSS height value is accepted.\nThis value can be overridden for a row by specifying a height on the given row.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'headerHeight', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`string`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '\\'2.5rem\\'', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`String that specifies the DataGrid header height. Values are suggested to be in `}<inlineCode parentName=\"p\">{`rem`}</inlineCode>{`s (ex `}<inlineCode parentName=\"p\">{`'5rem'`}</inlineCode>{`), but any valid CSS height value is accepted.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'hasSelectableRows', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Boolean indicating whether or not the DataGrid should allow entire rows to be selectable. An additional column will be\nrendered to allow for row selection to occur.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onRowSelect', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Function that will be called when a row is selected. Parameters: `}<inlineCode parentName=\"p\">{`onRowSelect(sectionId, rowId)`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'hasResizableColumns', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Boolean indicating whether or not resizable columns are enabled for the DataGrid. If this prop is not enabled, the isResizable value of columns\nwill be ignored.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'defaultColumnWidth', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`number`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '200', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Number indicating the default column width in px. This value will be used if no overriding width value is provided on a per-column basis.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onRequestContent', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Function that will be called when the DataGrid's vertical overflow reaches its terminal position. This can be used to contextually\nload additional content in the DataGrid. If there is no additional content to present, this function should not be provided.\nThe `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{` prop must also be provided as true; otherwise, the DataGrid will not overflow internally and will not know to request more content.\nParameters: `}<inlineCode parentName=\"p\">{`onRequestContent()`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'fill', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Boolean that indicates whether or not the DataGrid should fill its parent container.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n\n{ name: 'verticalOverflowContainerRefCallback', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Callback ref to pass into vertical overflow container.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'horizontalOverflowContainerRefCallback', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Callback ref to pass into horizontal overflow container.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n   ]}\n />\n);","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Badge } from 'terra-clinical-data-grid/package.json?dev-site-package';\nimport DataGridPropsTable from 'terra-clinical-data-grid/src/DataGrid?dev-site-props-table';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Badge mdxType=\"Badge\" />\n    <h1 {...{\n      \"id\": \"terra-clinical-datagrid\"\n    }}>{`Terra Clinical DataGrid`}</h1>\n    <p>{`The DataGrid is an organizational component that renders a collection of data in a grid-like format.`}</p>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Install with `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/\"\n        }}>{`npmjs`}</a>{`:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm install terra-clinical-data-grid`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`The DataGrid is a fully-controlled component that utilizes no internal state. Any desired changes to the DataGrid after its initial render can and should be communicated through its props.`}</p>\n    <p>{`Content is provided to the DataGrid as one of four distinct data structures: columns, sections, rows, and cells. These strutures are simple JS objects, not React components. Immutable objects should be used where possible to avoid unnecessary rendering costs.`}</p>\n    <h3 {...{\n      \"id\": \"columns\"\n    }}>{`Columns`}</h3>\n    <p>{`Columns define what is rendered in the column header as well as what interactions are available.`}</p>\n    <p>{`Columns are provided to the DataGrid through two props: `}<inlineCode parentName=\"p\">{`pinnedColumns`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`overflowColumns`}</inlineCode>{`. The order in which the columns are provided will be the order in which they are rendered, with the `}<inlineCode parentName=\"p\">{`pinnedColumns`}</inlineCode>{` preceeding the `}<inlineCode parentName=\"p\">{`overflowColumns`}</inlineCode>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`id`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An identifier for the column. This identifier should be unique across the set of columns provided to the DataGrid.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A number (in px) specifying the width of the column. If not provided, the DataGrid's default column width will be used.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isSelectable`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the column header is selectable. If true, the DataGrid's `}<inlineCode parentName=\"td\">{`onColumnSelect`}</inlineCode>{` prop will be called upon column header selection.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isResizable`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the column header is resizable. If true, a resize indicator will be rendered over the column header's contents, and the DataGrid's `}<inlineCode parentName=\"td\">{`onRequestColumnResize`}</inlineCode>{` function will be called upon interaction with the resize indicator. The new width will be provided with the function call so that the column's width property can be updated as needed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`text`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A string of text to render within the column header. This text will follow standard truncation rules as necessary. If a `}<inlineCode parentName=\"td\">{`component`}</inlineCode>{` value is specified, `}<inlineCode parentName=\"td\">{`text`}</inlineCode>{` will be ignored.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`sortIndicator`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of: `}<strong parentName=\"td\">{`ascending`}</strong>{`, `}<strong parentName=\"td\">{`descending`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A string indicating which sorting indicator should be rendered. If not provided, no sorting indicator will be rendered. If a `}<inlineCode parentName=\"td\">{`component`}</inlineCode>{` value is specified, `}<inlineCode parentName=\"td\">{`sortIndicator`}</inlineCode>{` will be ignored.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`component`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A custom component to render within the column header. If provided, the `}<inlineCode parentName=\"td\">{`text`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`sortIndicator`}</inlineCode>{` values will be ignored.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"sections\"\n    }}>{`Sections`}</h3>\n    <p>{`Sections define the rendering style of the section header as well as the rows inside the section.`}</p>\n    <p>{`Sections are provided to the DataGrid through the `}<inlineCode parentName=\"p\">{`sections`}</inlineCode>{` prop. The order in which the sections are provided will be the order in which they are rendered.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`id`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An identifier for the section. This identifier should be unique across the set of sections provided to the DataGrid.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isCollapsible`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the the section is collapsible. If true, the DataGrid's `}<inlineCode parentName=\"td\">{`onRequestSectionCollapse`}</inlineCode>{` function will be called upon selection of the section header, and an icon indicating collapsibility will be rendered within the seaction header.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isCollapsed`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the section is collapsed. If true, the DataGrid will not render the contents of the section.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`text`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A text string to render within the section header.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`startAccessory`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A component to render within the section header's start accessory position. This will be rendered ahead of `}<inlineCode parentName=\"td\">{`text`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`endAccessory`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A component to render within the section header's end accessory position. This will be rendered behind `}<inlineCode parentName=\"td\">{`text`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`component`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A custom component to render within the section header. If provided, the `}<inlineCode parentName=\"td\">{`text`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`startAccessory`}</inlineCode>{`, and `}<inlineCode parentName=\"td\">{`endAccessory`}</inlineCode>{` values will be ignored.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`rows`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of row objects to be rendered within the section.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: if `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`startAccessory`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`endAccessory`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` are not provided, and if `}<inlineCode parentName=\"p\">{`isCollapsible`}</inlineCode>{` is false, no section header will be rendered. However, the `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` of the section will continue to be rendered.`}</p>\n    </blockquote>\n    <p>{`Section headers will be provided the attribute `}<inlineCode parentName=\"p\">{`data-terra-clinical-data-grid-section-header-id=\"\\${sectionId}`}</inlineCode>{` for interested consumers.`}</p>\n    <h3 {...{\n      \"id\": \"rows\"\n    }}>{`Rows`}</h3>\n    <p>{`Rows define the cells rendered within the row as well as the row's selection properties.`}</p>\n    <p>{`Rows are provided to sections to be rendered by the DataGrid. The order in which the rows are provided will be the order in which they are rendered.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`id`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An identifier for the row. This identifier should be unique across the set of rows provided to a given section.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`ariaLabel`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A string identifier used to describe the row contents. This value will be used to contruct additional labels for internal controls (e.g. row selection cells).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isSelectable`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the row is selectable.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isSelected`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the row should render as selected.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`cells`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of cell objects that define the content to be rendered in the row. The order in which the cells are rendered is determined by the order of the `}<inlineCode parentName=\"td\">{`pinnedColumns`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`overflowColumns`}</inlineCode>{` props.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The height for this row. This overrides the `}<inlineCode parentName=\"td\">{`DataGrid`}</inlineCode>{` `}<inlineCode parentName=\"td\">{`rowHeight`}</inlineCode>{` property. Values are suggested to be in `}<inlineCode parentName=\"td\">{`rem`}</inlineCode>{`s (ex `}<inlineCode parentName=\"td\">{`'5rem'`}</inlineCode>{`), but any valid CSS height value is accepted.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"cells\"\n    }}>{`Cells`}</h3>\n    <p>{`Cells define the content rendered in a given section, row, and column.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`columnId`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A column identifier for the cell. This identifier should be unique across the set of cells provided to a given row.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isSelectable`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the cell is selectable.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isSelected`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A boolean indicating whether or not the cell should render as selected.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`component`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A component to render within the cell.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"creating-components-for-cells\"\n    }}>{`Creating components for Cells`}</h4>\n    <p>{`The DataGrid will provide a explicitly sized container within which the Cell `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` will be rendered. A height and width of `}<inlineCode parentName=\"p\">{`100%`}</inlineCode>{` should be set on the component to ensure it fills the available area.`}</p>\n    <h2 {...{\n      \"id\": \"creating-custom-content\"\n    }}>{`Creating Custom Content`}</h2>\n    <p>{`The various DataGrid containers (column header, section header, cell) support the presentation of custom components. However, there are a few rules that a component must adhere to.`}</p>\n    <p>{`The DataGrid provides a number of styles for mouse/keyboard interaction states (click, hover, selection). Custom components should generally render with a transparent background to ensure those default styles bleed through the component.`}</p>\n    <p>{`The DataGrid will provide a explicitly sized container within which the component will rendered. A height and width of `}<inlineCode parentName=\"p\">{`100%`}</inlineCode>{` should be set on the component to ensure it fills the area provided to it.`}</p>\n    <p>{`If there are any mouse/keyboard interactive elements within the component, and the component is rendered inside a selectable DataGrid container (column header, section header, cell), events may propagate in ways that the component is not expecting. Events triggered by those interactive elements should not be propagated to prevent undesired DataGrid interactions.`}</p>\n    <p>{`Additionally, these interactive elements must include a special data attribute called `}<inlineCode parentName=\"p\">{`data-accessible-data-grid-content`}</inlineCode>{`. The DataGrid utilizes a custom tabbing implementation to ensure a propper tabbing order, and including that attribute on all interactive elements of custom components will ensure that they are still sensibly keyboard accessible.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import DataGrid from 'terra-clinical-data-grid';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-features\"\n    }}>{`Component Features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://engineering.cerner.com/terra-ui/contributing/terra-ui/component-standards#cross-browser-support\"\n        }}>{`Cross-Browser Support`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://engineering.cerner.com/terra-ui/contributing/terra-ui/component-standards#responsive-support\"\n        }}>{`Responsive Support`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"data-grid-props-table\"\n    }}>{`Data Grid Props Table`}</h2>\n    <DataGridPropsTable mdxType=\"DataGridPropsTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _BadgesModule = _interopRequireDefault(require(\"./Badges.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_BadgesModule.default);\n\nvar propTypes = {\n  /**\n   * component name.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * Source code url\n   */\n  src: _propTypes.default.string,\n\n  /**\n   * url to link to\n   */\n  url: _propTypes.default.string,\n\n  /**\n   * The package version.\n   */\n  version: _propTypes.default.string.isRequired\n};\n\nvar Badges = function Badges(props) {\n  var src = props.src,\n      name = props.name,\n      url = props.url,\n      version = props.version;\n\n  var npmBadge = /*#__PURE__*/_react.default.createElement(\"a\", {\n    className: cx('badge'),\n    href: url || \"https://www.npmjs.org/package/\".concat(name, \"/v/\").concat(version)\n  }, /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-name')\n  }, url ? 'package' : 'npm'), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-version')\n  }, \"v\".concat(version)));\n\n  var srcCodeBadge = src ? /*#__PURE__*/_react.default.createElement(\"a\", {\n    className: cx('badge'),\n    href: src\n  }, /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-name')\n  }, \"github\"), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: cx('badge-version')\n  }, \"source\")) : undefined;\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: cx('badge-container')\n  }, npmBadge, srcCodeBadge);\n};\n\nBadges.propTypes = propTypes;\nvar _default = Badges;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"Badges-module__badge___3m7y2\",\"badge-container\":\"Badges-module__badge-container___1YxI5\",\"badge-name\":\"Badges-module__badge-name___BQ3u4\",\"badge-version\":\"Badges-module__badge-version___3OgwS\"};","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _theme = require(\"terra-application/lib/theme\");\n\nvar _PropsTableModule = _interopRequireDefault(require(\"./PropsTable.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/* eslint-disable react/forbid-dom-props */\nvar cx = _bind.default.bind(_PropsTableModule.default);\n\nvar propTypes = {\n  /**\n   * The props table rows.\n   */\n  rows: _propTypes.default.arrayOf(_propTypes.default.shape({\n    name: _propTypes.default.string,\n    type: _propTypes.default.func,\n    required: _propTypes.default.bool,\n    defaultValue: _propTypes.default.string,\n    description: _propTypes.default.func\n  }))\n};\n\nvar PropsTable = function PropsTable(_ref) {\n  var rows = _ref.rows;\n  var theme = (0, _react.useContext)(_theme.ThemeContext);\n  return /*#__PURE__*/_react.default.createElement(\"table\", {\n    className: cx('table', theme.className)\n  }, /*#__PURE__*/_react.default.createElement(\"thead\", null, /*#__PURE__*/_react.default.createElement(\"tr\", {\n    className: cx('tr')\n  }, /*#__PURE__*/_react.default.createElement(\"th\", {\n    className: cx('th')\n  }, \"Prop Name\"), /*#__PURE__*/_react.default.createElement(\"th\", {\n    className: cx('th')\n  }, \"Type\"), /*#__PURE__*/_react.default.createElement(\"th\", {\n    className: cx('th')\n  }, \"Is Required\"), /*#__PURE__*/_react.default.createElement(\"th\", {\n    className: cx('th')\n  }, \"Default Value\"), /*#__PURE__*/_react.default.createElement(\"th\", {\n    className: cx('th')\n  }, \"Description\"))), /*#__PURE__*/_react.default.createElement(\"tbody\", null, rows.map(function (row) {\n    return /*#__PURE__*/_react.default.createElement(\"tr\", {\n      className: cx('tr', 'props-tr'),\n      key: row.name\n    }, /*#__PURE__*/_react.default.createElement(\"td\", {\n      className: cx(['td', 'strong', 'props-td'])\n    }, row.name), /*#__PURE__*/_react.default.createElement(\"td\", {\n      className: cx(['td', 'props-td'])\n    }, row.type()), /*#__PURE__*/_react.default.createElement(\"td\", {\n      className: cx(['td', 'props-td', row.required ? ['required'] : []])\n    }, row.required ? 'required' : 'optional'), /*#__PURE__*/_react.default.createElement(\"td\", {\n      className: cx(['td', 'props-td'])\n    }, row.defaultValue), /*#__PURE__*/_react.default.createElement(\"td\", {\n      className: cx(['td', 'props-td'])\n    }, row.description()));\n  })));\n};\n\nPropsTable.propTypes = propTypes;\nvar _default = PropsTable;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clinical-lowlight-theme\":\"PropsTable-module__clinical-lowlight-theme___3s97-\",\"orion-fusion-theme\":\"PropsTable-module__orion-fusion-theme___1kDLT\",\"a\":\"PropsTable-module__a___6WaJD\",\"blockquote\":\"PropsTable-module__blockquote___2loIo\",\"code\":\"PropsTable-module__code___1vedU\",\"dd\":\"PropsTable-module__dd___3pYcW\",\"dl\":\"PropsTable-module__dl___397p5\",\"dt\":\"PropsTable-module__dt___1-GVs\",\"h1\":\"PropsTable-module__h1___1OAAp\",\"h2\":\"PropsTable-module__h2___2iZ6i\",\"h3\":\"PropsTable-module__h3___3N0fw\",\"h4\":\"PropsTable-module__h4___214vu\",\"h5\":\"PropsTable-module__h5___1ajw8\",\"h6\":\"PropsTable-module__h6___19W7i\",\"icon-link\":\"PropsTable-module__icon-link___HUOC7\",\"anchor\":\"PropsTable-module__anchor___1UTVD\",\"hr\":\"PropsTable-module__hr___15B3j\",\"img\":\"PropsTable-module__img___1rEq-\",\"input\":\"PropsTable-module__input___1WHRX\",\"kbd\":\"PropsTable-module__kbd___2DvPC\",\"li\":\"PropsTable-module__li___1T8DQ\",\"p\":\"PropsTable-module__p___3ssgC\",\"ol\":\"PropsTable-module__ol___2tCva\",\"ul\":\"PropsTable-module__ul___DlvOz\",\"td\":\"PropsTable-module__td___3svU1\",\"pre\":\"PropsTable-module__pre___3qXsS\",\"strong\":\"PropsTable-module__strong___2DSlR\",\"table\":\"PropsTable-module__table___1sV8g\",\"th\":\"PropsTable-module__th___RQkAz\",\"tr\":\"PropsTable-module__tr___1dras\",\"icon\":\"PropsTable-module__icon___1fv-c\",\"required\":\"PropsTable-module__required___1b3oJ\",\"props-tr\":\"PropsTable-module__props-tr___1c88t\",\"props-td\":\"PropsTable-module__props-td___dEhbY\"};","import React from 'react';\nimport Badges from 'terra-dev-site/lib/loader-components/_Badges';\n\nexport const Badge = ({ url }) => (\n      <Badges\n        src=\"https://github.com/cerner/terra-clinical/tree/main/packages/terra-clinical-data-grid\"\n        name=\"terra-clinical-data-grid\"\n        version=\"2.26.0\"\n        url={url}\n      />\n    );"],"sourceRoot":""}